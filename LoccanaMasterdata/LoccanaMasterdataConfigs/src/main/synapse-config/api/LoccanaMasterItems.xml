<?xml version="1.0" encoding="UTF-8"?>
<api context="/loccana/master/items" name="LoccanaMasterItems" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST">
        <inSequence>
            <validate cache-schema="true" source="json-eval($)">
                <schema key="conf:schema/items_validator.json"/>
                <on-fail>
                    <property description="Error Message" expression="$ctx:ERROR_MESSAGE" name="message" scope="default" type="STRING"/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </on-fail>
            </validate>
            <log description="Log start" level="custom">
                <property name="Log Message" value="Insert data items"/>
            </log>
            <propertyGroup description="Parameter Input">
                <property expression="json-eval($.item_code)" name="item_code" scope="default" type="STRING"/>
                <property expression="json-eval($.item_name)" name="item_name" scope="default" type="STRING"/>
                <property expression="json-eval($.item_description)" name="item_description" scope="default" type="STRING"/>
                <property expression="json-eval($.type_id)" name="type_id" scope="default" type="STRING"/>
                <property expression="json-eval($.uom_id)" name="uom_id" scope="default" type="STRING"/>
                <property expression="json-eval($.partner_id)" name="partner_id" scope="default" type="STRING"/>
                <property expression="json-eval($.vat)" name="vat" scope="default" type="STRING"/>
                <property expression="json-eval($.unit_box)" name="unit_box" scope="default" type="STRING"/>
                <property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss')" name="currentDate" scope="default" type="STRING"/>
            </propertyGroup>
            <dataServiceCall description="Create items" serviceName="LoccanaMasterdataDataService">
                <operations type="single">
                    <operation name="createItems">
                        <param evaluator="xml" expression="get-property('item_code')" name="item_code"/>
                        <param evaluator="xml" expression="get-property('item_name')" name="item_name"/>
                        <param evaluator="xml" expression="get-property('item_description')" name="item_description"/>
                        <param evaluator="xml" expression="get-property('type_id')" name="type_id"/>
                        <param evaluator="xml" expression="get-property('uom_id')" name="uom_id"/>
                        <param evaluator="xml" expression="get-property('partner_id')" name="partner_id"/>
                        <param evaluator="xml" expression="get-property('vat')" name="vat"/>
                        <param evaluator="xml" expression="get-property('currentDate')" name="created_at"/>
                        <param evaluator="xml" expression="get-property('currentDate')" name="updated_at"/>
                    </operation>
                </operations>
                <source type="inline"/>
                <target type="body"/>
            </dataServiceCall>
            <property description="Result" expression="json-eval($)" name="result" scope="default" type="STRING"/>
            <filter regex="false" source="boolean(get-property('result'))">
                <then>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Gagal menambahkan items."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </then>
                <else/>
            </filter>
            <property description="Success data" expression="json-eval($.return)" name="returnId" scope="default" type="STRING"/>
            <property description="Success id" expression="json-eval($.return.id)" name="itemId" scope="default" type="STRING"/>
            <sequence key="PostItemQty"/>
            <sequence key="PostItemPrices"/>
            <property description="Success Message" name="message" scope="default" type="STRING" value="Tambah item berhasil."/>
            <property description="Success data" expression="get-property('returnId')" name="data" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseSuccess"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
    <resource methods="PUT" uri-template="/{id}">
        <inSequence>
            <validate cache-schema="true" source="json-eval($)">
                <schema key="conf:schema/items_validator.json"/>
                <on-fail>
                    <property description="Error Message" expression="$ctx:ERROR_MESSAGE" name="message" scope="default" type="STRING"/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </on-fail>
            </validate>
            <propertyGroup description="Parameter Update">
                <property expression="get-property('uri.var.id')" name="itemsId" scope="default" type="STRING"/>
                <property expression="json-eval($.item_code)" name="item_code" scope="default" type="STRING"/>
                <property expression="json-eval($.item_name)" name="item_name" scope="default" type="STRING"/>
                <property expression="json-eval($.item_description)" name="item_description" scope="default" type="STRING"/>
                <property expression="json-eval($.type_id)" name="type_id" scope="default" type="STRING"/>
                <property expression="json-eval($.uom_id)" name="uom_id" scope="default" type="STRING"/>
                <property expression="json-eval($.unit_box)" name="unit_box" scope="default" type="STRING"/>
                <property expression="json-eval($.partner_id)" name="partner_id" scope="default" type="STRING"/>
                <property expression="json-eval($.vat)" name="vat" scope="default" type="STRING"/>
                <property expression="json-eval($.status)" name="status" scope="default" type="STRING"/>
                <property expression="get-property('SYSTEM_DATE', 'yyyy-MM-dd HH:mm:ss')" name="currentDate" scope="default" type="STRING"/>
            </propertyGroup>
            <log description="Log start" level="custom">
                <property expression="get-property('itemsId')" name="Update item id"/>
            </log>
            <sequence key="GetItemsDetail"/>
            <filter regex="false" source="boolean(get-property('data'))">
                <then>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Item tidak ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </then>
                <else>
                    <property action="remove" name="data" scope="default"/>
                </else>
            </filter>
            <dataServiceCall description="Update item" serviceName="LoccanaMasterdataDataService">
                <operations type="single">
                    <operation name="updateItems">
                        <param evaluator="xml" expression="get-property('item_code')" name="item_code"/>
                        <param evaluator="xml" expression="get-property('item_name')" name="item_name"/>
                        <param evaluator="xml" expression="get-property('item_description')" name="item_description"/>
                        <param evaluator="xml" expression="get-property('type_id')" name="type_id"/>
                        <param evaluator="xml" expression="get-property('uom_id')" name="uom_id"/>
                        <param evaluator="xml" expression="get-property('partner_id')" name="partner_id"/>
                        <param evaluator="xml" expression="get-property('vat')" name="vat"/>
                        <param evaluator="xml" expression="get-property('currentDate')" name="updated_at"/>
                        <param evaluator="xml" expression="get-property('itemsId')" name="id"/>
                    </operation>
                </operations>
                <source type="inline"/>
                <target type="body"/>
            </dataServiceCall>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Get update status" expression="json-eval($.UpdatedRowCount.id)" name="result" scope="default" type="STRING"/>
            <filter regex="1" source="get-property('result')">
                <then>
                    <property description="Success Message" name="message" scope="default" type="STRING" value="Update item berhasil."/>
                    <sequence key="LoccanaMasterGetResponseSuccess"/>
                </then>
                <else>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Update Item gagal."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
    <resource methods="DELETE" uri-template="/{id}">
        <inSequence>
            <propertyGroup description="Parameter Update">
                <property expression="get-property('uri.var.id')" name="itemsId" scope="default" type="STRING"/>
            </propertyGroup>
            <log description="Log start" level="custom">
                <property expression="get-property('itemsId')" name="Delete item id"/>
            </log>
            <sequence key="GetItemsDetail"/>
            <filter regex="false" source="boolean(get-property('data'))">
                <then>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Item tidak ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </then>
                <else>
                    <property action="remove" name="data" scope="default"/>
                </else>
            </filter>
            <dataServiceCall description="Delete item" serviceName="LoccanaMasterdataDataService">
                <operations type="single">
                    <operation name="deleteItems">
                        <param evaluator="xml" expression="get-property('itemsId')" name="id"/>
                    </operation>
                </operations>
                <source type="inline"/>
                <target type="body"/>
            </dataServiceCall>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Get update status" expression="json-eval($.UpdatedRowCount.id)" name="result" scope="default" type="STRING"/>
            <filter regex="1" source="get-property('result')">
                <then>
                    <property description="Success Message" name="message" scope="default" type="STRING" value="Delete item berhasil."/>
                    <sequence key="LoccanaMasterGetResponseSuccess"/>
                </then>
                <else>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Delete Item gagal."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/{id}">
        <inSequence>
            <property description="Item Id" expression="get-property('uri.var.id')" name="itemsId" scope="default" type="STRING"/>
            <log description="Log start" level="custom">
                <property expression="get-property('itemsId')" name="Get detail item id"/>
            </log>
            <sequence key="GetItemsDetail"/>
            <filter regex="false" source="boolean(get-property('data'))">
                <then>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Item tidak ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </then>
                <else>
                    <property description="Success Message" name="message" scope="default" type="STRING" value="Item ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseSuccess"/>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/listItems/items">
        <inSequence>
            <sequence key="GetItemLists"/>
            <filter regex="false" source="boolean(get-property('data'))">
                <then>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Item tidak ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </then>
                <else>
                    <property description="Success Message" name="message" scope="default" type="STRING" value="Item ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseSuccess"/>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
    <resource methods="GET" uri-template="/list/type/{type}">
        <inSequence>
            <property description="Item Type" expression="get-property('uri.var.type')" name="itemsId" scope="default" type="STRING"/>
            <log description="Log start" level="custom">
                <property expression="get-property('itemsType')" name="Get detail item type"/>
            </log>
            <sequence key="GetItemsTypeDetail"/>
            <filter regex="false" source="boolean(get-property('data'))">
                <then>
                    <property description="Error Message" name="message" scope="default" type="STRING" value="Item tidak ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </then>
                <else>
                    <property description="Success Message" name="message" scope="default" type="STRING" value="Item ditemukan."/>
                    <sequence key="LoccanaMasterGetResponseSuccess"/>
                </else>
            </filter>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
    <resource methods="POST" uri-template="/lists">
        <inSequence>
            <validate cache-schema="true" source="json-eval($)">
                <schema key="conf:schema/itemList_validator.json"/>
                <on-fail>
                    <property description="Error Message" expression="$ctx:ERROR_MESSAGE" name="message" scope="default" type="STRING"/>
                    <sequence key="LoccanaMasterGetResponseError"/>
                </on-fail>
            </validate>
            <log description="Log start get list" level="custom">
                <property name="Log Message" value="List items"/>
            </log>
            <propertyGroup description="Parameter Input">
                <property expression="json-eval($.search)" name="search" scope="default" type="STRING"/>
                <property expression="json-eval($.limit)" name="limit" scope="default" type="STRING"/>
                <property expression="json-eval($.offset)" name="offset" scope="default" type="STRING"/>
            </propertyGroup>
            <dataServiceCall description="List items" serviceName="LoccanaMasterdataDataService">
                <operations type="single">
                    <operation name="getItems">
                        <param evaluator="xml" expression="get-property('search')" name="search"/>
                        <param evaluator="xml" expression="get-property('limit')" name="limit"/>
                        <param evaluator="xml" expression="get-property('offset')" name="offset"/>
                    </operation>
                </operations>
                <source type="inline"/>
                <target type="body"/>
            </dataServiceCall>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Result" expression="json-eval($)" name="resultlist" scope="default" type="STRING"/>
            <filter regex="false" source="boolean(get-property('resultlist'))">
                <then>
                    <property description="Success data" name="datalist" scope="default" type="STRING" value="[]"/>
                </then>
                <else>
                    <property description="Success data" expression="json-eval($.data.items)" name="datalist" scope="default" type="STRING"/>
                </else>
            </filter>
            <dataServiceCall description="Count item" serviceName="LoccanaMasterdataDataService">
                <operations type="single">
                    <operation name="getItemsCount">
                        <param evaluator="xml" expression="get-property('search')" name="search"/>
                    </operation>
                </operations>
                <source type="inline"/>
                <target type="body"/>
            </dataServiceCall>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <property description="Result" expression="json-eval($)" name="resultcount" scope="default" type="STRING"/>
            <filter regex="false" source="boolean(get-property('resultcount'))">
                <then>
                    <property description="Success data" name="datacount" scope="default" type="STRING" value="{}"/>
                </then>
                <else>
                    <property description="Success data" expression="json-eval($.data)" name="datacount" scope="default" type="STRING"/>
                </else>
            </filter>
            <property description="Success Message" name="message" scope="default" type="STRING" value="List items."/>
            <payloadFactory media-type="json">
                <format>{
    "table": $1,
    "jumlah": $2
}</format>
                <args>
                    <arg evaluator="xml" expression="get-property('datalist')"/>
                    <arg evaluator="xml" expression="get-property('datacount')"/>
                </args>
            </payloadFactory>
            <property description="Success data" expression="json-eval($)" name="data" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseSuccess"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <property description="ErrorMessage" expression="get-property('ERROR_MESSAGE')" name="message" scope="default" type="STRING"/>
            <sequence key="LoccanaMasterGetResponseError"/>
        </faultSequence>
    </resource>
</api>
